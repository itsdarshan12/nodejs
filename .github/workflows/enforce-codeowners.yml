name: Auto-Restore CODEOWNERS

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - development
      - quality
      - main
      - hotfix

  push:
    branches:
      - development
      - quality
      - main
      - hotfix

jobs:
  restore-codeowners:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout head branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || github.ref_name }}

      - name: Determine target and head branches
        id: vars
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
            echo "TARGET_BRANCH=${{ github.event.pull_request.base.ref }}" >> $GITHUB_ENV
            echo "HEAD_BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
          else
            echo "TARGET_BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
            echo "HEAD_BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
          fi

      - name: Restore CODEOWNERS from template
        run: |
          echo "üìå Target branch: $TARGET_BRANCH"
          echo "üìå Head branch: $HEAD_BRANCH"

        
          # Normalize hotfix to use main's template
          if [[ "$TARGET_BRANCH" == "hotfix" ]]; then
            TEMPLATE=".github/CODEOWNERS.main"
          else
            TEMPLATE=".github/CODEOWNERS.$TARGET_BRANCH"
          fi
      
          if [ -f "$TEMPLATE" ]; then
            cp "$TEMPLATE" .github/CODEOWNERS
            echo "‚úÖ CODEOWNERS restored from $TEMPLATE"
          else
            echo "‚ùå No template found for branch: $TARGET_BRANCH"
            exit 1
          fi


      - name: Commit and push updated CODEOWNERS
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .github/CODEOWNERS
          git commit -m "ci: restore CODEOWNERS for $TARGET_BRANCH" || echo "‚ÑπÔ∏è No changes to commit"
          git push origin HEAD:$HEAD_BRANCH || echo "‚ÑπÔ∏è Push skipped"
